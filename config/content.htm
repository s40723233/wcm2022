<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作1</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Week1~9</h1>
<p></p>
<h6>IPV6設定</h6>
<h6>利用<span> </span><a href="https://www.debugmode.com/wink/">Wink</a><span> </span>建立電腦操作流程影片時, 必須注意:</h6>
<ol>
<li>可以與 ShareX 共用<span> </span><a href="https://www.ffmpeg.org/download.html#build-windows">ffmpeg.exe</a>.</li>
<li>為了讓影片能在手機觀看, video 標註中必須帶有 autoplay 與 controls 屬性.</li>
<li>video 標註的大小必須與<span> </span><a href="https://www.debugmode.com/wink/">Wink</a><span> </span>專案檔中的設定相符, 合適的尺寸大小: width="1008" height="630".</li>
<li>以下<span> </span><a href="https://www.debugmode.com/wink/">Wink</a><span> </span>影片設定超文件檔案:<span> </span><a href="https://mde.tw/wcm2022_guide/downloads/wink_script_and_setup.txt">wink_script_and_setup.txt</a></li>
</ol>
<p><span><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData" height="630" muted="true" width="1008">
<source src="/downloads/wcm_w2_2.mp4" type="video/mp4"/></video></span></p>
<p><span>建立新倉儲以及設定SSH資料</span></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0zhIHZCtum8" width="560"></iframe></strong></p>
<h1>設定 nginx</h1>
<p>Nginx 設定為 WWW 網際下載主機:</p>
<p>nginx.conf</p>
<div>
<div class="syntaxhighlighter js" id="highlighter_310726">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js plain">server {</code></div>
<div class="line number2 index1 alt1"><code class="js spaces">    </code><code class="js preprocessor"># 原先可以接受 IPv4 網路連線, 目前覆蓋為 comment</code></div>
<div class="line number3 index2 alt2"><code class="js spaces">    </code><code class="js preprocessor">#listen       80;</code></div>
<div class="line number4 index3 alt1"><code class="js spaces">    </code><code class="js preprocessor"># 設定接受 IPv6 網路連線</code></div>
<div class="line number5 index4 alt2"><code class="js spaces">    </code><code class="js plain">listen [::]:80;</code></div>
<div class="line number6 index5 alt1"><code class="js spaces">    </code><code class="js preprocessor"># 原先採 localhost 伺服器連線, 目前覆蓋為註解</code></div>
<div class="line number7 index6 alt2"><code class="js spaces">    </code><code class="js preprocessor">#server_name  localhost;</code></div>
<div class="line number8 index7 alt1"><code class="js spaces">    </code><code class="js preprocessor"># 只允許系上 IPv6 網路連線</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js plain">allow 2001:288:6004:17::0/32;</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code><code class="js preprocessor"># 除系上網段外, 其餘網段均拒絕連線</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js plain">deny all;</code></div>
<div class="line number12 index11 alt1"><code class="js spaces">    </code> </div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">location / {</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">        </code><code class="js preprocessor"># 網際根目錄</code></div>
<div class="line number15 index14 alt2"><code class="js spaces">        </code><code class="js plain">root E:/downloads;</code></div>
<div class="line number16 index15 alt1"><code class="js spaces">        </code><code class="js preprocessor"># 利用帳號密碼認證後才可連線</code></div>
<div class="line number17 index16 alt2"><code class="js spaces">        </code><code class="js plain">auth_basic </code><code class="js string">"For Authorized Users Only!"</code><code class="js plain">;</code></div>
<div class="line number18 index17 alt1"><code class="js spaces">        </code><code class="js plain">auth_basic_user_file C:/pj2022/nginx-1.20.2/.htpasswd; </code></div>
<div class="line number19 index18 alt2"><code class="js spaces">    </code><code class="js plain">}</code></div>
<div class="line number20 index19 alt1"><code class="js spaces">    </code><code class="js preprocessor"># 設定為列出各檔案與目錄的索引內容</code></div>
<div class="line number21 index20 alt2"><code class="js spaces">    </code><code class="js plain">autoindex on;</code></div>
<div class="line number22 index21 alt1"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
<!-- 接下來將 mp4 檔案從 downloads 目錄取出 -->
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData" height="630" muted="true" width="1008">
<source src="./../downloads/nginx.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h1>查驗 nginx 數位簽章</h1>
<p>&lt;script&gt;// &lt;![CDATA[<br/>var winkVideoData = {<br/> dataVersion: 1,<br/> frameRate: 10,<br/> buttonFrameLength: 5,<br/> buttonFrameOffset: 2,<br/> frameStops: {<br/> },<br/>};<br/>// ]]&gt;&lt;/script&gt;<br/>&lt;!-- 接下來將 mp4 檔案從 downloads 目錄取出 --&gt;<br/>&lt;div class="winkVideoContainerClass"&gt;&lt;video width="1008" height="630" autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="/static" data-varname="winkVideoData" muted="true"&gt;<br/>&lt;source src="./../downloads/nginx.mp4" type="video/mp4" /&gt;&lt;/video&gt;<br/>&lt;div class="winkVideoOverlayClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarClass"&gt;&lt;button class="winkVideoControlBarPlayButtonClass"&gt;&lt;/button&gt; &lt;button class="winkVideoControlBarPauseButtonClass"&gt;&lt;/button&gt;<br/>&lt;div class="winkVideoControlBarProgressLeftClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressEmptyMiddleClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressRightClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressFilledMiddleClass"&gt;&lt;/div&gt;<br/>&lt;div class="winkVideoControlBarProgressThumbClass"&gt;&lt;/div&gt;<br/>&lt;/div&gt;<br/>&lt;div class="winkVideoPlayOverlayClass"&gt;&lt;/div&gt;<br/>&lt;/div&gt;</p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>